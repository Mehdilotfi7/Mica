29.04.2025
What i have done?
1. add _ before each module to have the new way of developing the package and the old one.
   - using multipatch for defing and simulating the modules.
   - Tested Model simulation module in _runtests.jl file.
   - removed segmen_loss from objective function module and let users totally define the loss function by themselves.
2. create the _runtests.jl in a very pretty way.
3. Github page updated and push pull commits work properly.

ToDo list:
1. find a better way to handle different dataset slicing for different dimention and simulation diffierent models in segmentation for loop.
2. After completing objective function module, test it in _runtests.jl.
___________________________________________________________________________________________________________________________________________________
___________________________________________________________________________________________________________________________________________________
30.04.2025
What i have done?
1. Thought about designing the objective function module with a simple and readible way and came up with this idea that i need to have a data
handeling module as follows:  
   - It accepts datatype as vector, vector of vector, matrix and dataframe and return a matrix in all cases this make easier in objective function to do segmentation with single line and avoid date type extraction.
   - For now I skip the interpolation of missing values, but for later i can think of adding that as well.
2. differnt length of vectors when we have vector of vectors arise mismatch issue when computation of loss value, so i need to give an example 
in objective function module to guide the users.

ToDo list:
1. find a better way to handle different dataset slicing for different dimention and simulation diffierent models in segmentation for loop.
2. After completing objective function module, test it in _runtests.jl.
___________________________________________________________________________________________________________________________________________________
___________________________________________________________________________________________________________________________________________________
01.05.2025
What i have done?
1. _ModelHandling module added tot ease the way of argument definind and not to have a need for model argument specification 
I will use this inside objective function
2. updated objective functoion:
   - now it has less arguments.  initial_conditions=nothing, extra_data=nothing, num_steps=nothing, tspan=nothing removed and handled by _ModelHandling module 
   - compare_variables=nothing, transformation=identity should be handled by user defined losss function.

ToDo list:
1. test _ModelHandling module and see if fits my goal
2. understand segment_model function
3. test objective function 
4. the current issue lies in simulation of model inside a given segment and data segmentation process for a segment and updating initial 
conditions if applicable to a model
   - what can I do is to handle them using a helper function for each and especially for segment simulation and data segmentation and 
   pass them as arguments to the loss function 
   - for initial conditions updating i need to also use a helper function similar to get initial condition function 
___________________________________________________________________________________________________________________________________________________
___________________________________________________________________________________________________________________________________________________
02.05.2025
What i have done?
1. what can I do is to handle them using a helper function for each and especially for segment simulation and data segmentation and 
   pass them as arguments to the loss function  -----> done
2. for initial conditions updating i need to also use a helper function similar to get initial condition function ----> done

ToDo list:
in the current version of runtests.jl in testing of _ModelHandling mudule it just tests the simulate_model not its helper functtions
also i need to know the rule of parnames.
___________________________________________________________________________________________________________________________________________________
___________________________________________________________________________________________________________________________________________________
13.05.2025
What i have done?
1. _ModelHandling mudule helper functions are tested now for three types of models.
2.  now I know the rule of parnames. and that is naming the parameters in each segment.
3. objective function module helper functions are tested now.
4. _ChangePointDetection module updated to use model handeling and objective function module and have less arguments to find out the model type, ....
5. - optimize_with_changepoints and update_bounds! are tested with no change point option.

ToDo list:
1. test evaluate_segment function with some change points for all three models.
2. test detect_changepoints for all three models and see the run time as well.

___________________________________________________________________________________________________________________________________________________
___________________________________________________________________________________________________________________________________________________
14.05.2025
What i have done?
1. evaluate_segment function for an ode model.
2. example folder created, and example_ODE.jl is being tested.
3. future version features specified 

ToDo list:
1. create examole_Difference.jl and example_Regression.jl files to test two other methods than ODE model.
2. Think about accepted data type from users ---> sould i use data handler module or restrict them to enter data as a Matrix.
3. I need to double check all functions arguments type.
4. move extra files to another folder just keep modules files in this directory.
5. finalize the package.
6. Find out the real time docstring monitoring.



16.05.2025
What i have done?
1. now the codes are working for ode but it is really slow
2. for solving this issue, i created a objective function using the original working code, but the proble is still there.
 

ToDo list:

1. re design the objective function from the working code and figure out the source of killing performance.
2. test the working code for largfe covid model.
-----
1. create examole_Difference.jl and example_Regression.jl files to test two other methods than ODE model.
2. Think about accepted data type from users ---> sould i use data handler module or restrict them to enter data as a Matrix.
3. I need to double check all functions arguments type.
4. move extra files to another folder just keep modules files in this directory.
5. finalize the package.
6. Find out the real time docstring monitoring.












___________________________________________________________________________________________________________________________________________________
___________________________________________________________________________________________________________________________________________________
I will leave these features for next version
1. visualisation of change point detection
2. using GPU option
3. potential parallelisation 
4. support more models (ANN,bayesian models, ...)
5. online change point detection 
6. using interpolation if there are missings in data

